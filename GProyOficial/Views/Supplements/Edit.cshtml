@model GProyOficial.Models.Supplement

@{
    ViewBag.Title = "Editar Suplemento";
}

<h3>Editar suplemento</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.supplementId)

        <div class="form-group">
            @Html.LabelFor(model => model.number, "Número", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden="">
            @Html.LabelFor(model => model.contractId, "Contrato", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="number" name="contractId" value=@ViewBag.contractId id="contractId" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, "Monto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", @id = "amountV", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nom1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nom2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom2, "", new { @class = "text-danger" })
            </div>
        </div>

   
        <div class="form-group">
            <label class="control-label col-md-2">Firma del proveedor</label>

            <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                <input type="text" class="form-control" readonly id="signedProvider" name="signedProvider" value="@Model.signedProvider">
                <span class="input-group-btn">
                    <button class="btn default" type="button"><i class="fa fa-calendar"></i></button>
                </span>
            </div>
        </div>
            <div class="form-group">
                <label class="control-label col-md-2">Fecha de expiración</label>

                <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                    <input type="text" class="form-control" readonly id="expirationDate" name="expirationDate" value="@Model.expirationDate">
                    <span class="input-group-btn">
                        <button class="btn default" type="button"><i class="fa fa-calendar"></i></button>
                    </span>
                </div>
            </div>

  
        <div class="form-group">
            <label class="control-label col-md-2">Firma del cliente</label>

            <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                <input type="text" class="form-control" readonly id="signedClient" name="signedClient" value="@Model.signedClient">
                <span class="input-group-btn">
                    <button class="btn default" type="button"><i class="fa fa-calendar"></i></button>
                </span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceId, "Servicio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("serviceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Producto</label>
            <div class="col-md-10">
                <select class="form-control input-large select2me" id="productId" name="productId" placeholder="Seleccione un Producto" required="required">
                    <option value=""></option>
                    <option value=@ViewBag.productId.productId selected="selected">@ViewBag.productId.name</option>
                    
                </select>
            </div>
            <input type="text" id="idprod" value="@ViewBag.productId.productId" hidden="">
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Estado</label>
            <div class="col-md-10">
                <select class="form-control valid" id="stateC" name="stateC">
                    @foreach (var item in ViewBag.stateC)
                    {
                        if (item.stateCId == @ViewBag.stateSupplement.stateCId)
                        {
                            <option value=@item.stateCId selected="selected">@item.name</option>
                        }
                        else
                        {
                            if (item.stateCId != 7 && item.stateCId != 10)
                            {
                                <option value=@item.stateCId>@item.name</option>
                            }
                        }
                    }
                </select>
                

                    <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                        <input type="text" class="form-control" required="" readonly id="dateState" name="dateState" value="@ViewBag.stateSupplement.date">
                        <span class="input-group-btn">
                            <button class="btn default" type="button"><i class="fa fa-calendar"></i></button>
                        </span>
                    </div>
                

                <textarea class="form-control" rows="3" required id="descriptionState" name="descriptionState" style="height: 35px">@ViewBag.stateSupplement.description</textarea>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comitteNumber, "Número de acuerdo del comité", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comitteNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comitteNumber, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            <label class="control-label col-md-2">Fecha del comité</label>

            <div class="input-group input-medium date date-picker" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                <input type="text" class="form-control" readonly id="comitteDate" name="comitteDate" value="@Model.comitteDate">
                <span class="input-group-btn">
                    <button class="btn default" type="button"><i class="fa fa-calendar"></i></button>
                </span>
            </div>
        </div>

       
        <input type="text" id="jsonClient" name="jsonClient" hidden=""/>

        <div class="form-group" hidden="">
            <div class="col-md-offset-2 col-md-2">
                @if (ViewBag.idclientValue)
                {
                    <input type="checkbox" checked="checked" value="true" name="idclient"/>
                }
                else
                {
                    <input type="checkbox" value="false" name="idclient"/>
                }
            </div>

        </div>

        <div class="form-group">
            @Html.ActionLink("Cancelar", "Index", "Supplements", new { id = @ViewBag.contractId, idclient = @ViewBag.idclientValue }, new { @class = "btn btn-danger btn-sm" })|<input type="submit" value="Aceptar" class="btn btn-default btn-sm" />
        </div>
    </div>
}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/site.js")
}
